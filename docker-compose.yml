version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: nhom4-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 170903
      MYSQL_DATABASE: nhom4 # Thêm dòng này để tạo database mặc định
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - booking-network
    command: --init-file=/docker-entrypoint-initdb.d/init-db.sql # Thêm dòng này

  redis:
    image: redis:7-alpine
    container_name: nhom4-redis
    ports:
      - "6379:6379"
    networks:
      - booking-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: nhom4-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - booking-network

  eureka:
    build:
      context: ./eureka
      dockerfile: Dockerfile
    container_name: nhom4-eureka
    ports:
      - "8761:8761"
    networks:
      - booking-network

  uc-service:
    build:
      context: ./services/uc
      dockerfile: Dockerfile
    container_name: uc-service
    depends_on:
      - mysql
      - eureka
    ports:
      - "8000:8000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/nhom4_uc?useUnicode=true&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 170903
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - booking-network

  position-service:
    build:
      context: ./services/position
      dockerfile: Dockerfile
    container_name: position-service
    depends_on:
      - mysql
      - redis
      - eureka
      - uc-service
    ports:
      - "8003:8003"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/nhom4_position?useUnicode=true&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 170903
      SPRING_REDIS_HOST: redis
      BOOKING_UC_URL: http://uc-service:8000
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - booking-network

  intention-service:
    build:
      context: ./services/intention-service
      dockerfile: Dockerfile
    container_name: intention-service
    depends_on:
      - mysql
      - redis
      - rabbitmq
      - eureka
    ports:
      - "8001:8001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/nhom4_intention?useUnicode=true&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 170903
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - booking-network

  order-service:
    build:
      context: ./services/order
      dockerfile: Dockerfile
    container_name: order-service
    depends_on:
      - mysql
      - rabbitmq
      - eureka
    ports:
      - "8002:8002"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/nhom4_order?useUnicode=true&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 170903
      SPRING_RABBITMQ_HOST: rabbitmq
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - booking-network

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    depends_on:
      - eureka
      - uc-service
      - position-service
      - intention-service
      - order-service
    ports:
      - "8800:8800"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
    networks:
      - booking-network

networks:
  booking-network:
    driver: bridge

volumes:
  mysql-data:
